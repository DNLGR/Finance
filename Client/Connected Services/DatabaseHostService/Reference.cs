//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.DatabaseHostService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DatabaseHostService.IDatabaseService")]
    public interface IDatabaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/Connect", ReplyAction="http://tempuri.org/IDatabaseService/ConnectResponse")]
        int Connect(int ApplicationHashCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/Connect", ReplyAction="http://tempuri.org/IDatabaseService/ConnectResponse")]
        System.Threading.Tasks.Task<int> ConnectAsync(int ApplicationHashCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/Disconnect", ReplyAction="http://tempuri.org/IDatabaseService/DisconnectResponse")]
        void Disconnect(int ApplicationHashCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/Disconnect", ReplyAction="http://tempuri.org/IDatabaseService/DisconnectResponse")]
        System.Threading.Tasks.Task DisconnectAsync(int ApplicationHashCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/Get", ReplyAction="http://tempuri.org/IDatabaseService/GetResponse")]
        FinanceServices.Components.Database.DatabaseTable Get(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/Get", ReplyAction="http://tempuri.org/IDatabaseService/GetResponse")]
        System.Threading.Tasks.Task<FinanceServices.Components.Database.DatabaseTable> GetAsync(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/Execute", ReplyAction="http://tempuri.org/IDatabaseService/ExecuteResponse")]
        void Execute(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/Execute", ReplyAction="http://tempuri.org/IDatabaseService/ExecuteResponse")]
        System.Threading.Tasks.Task ExecuteAsync(string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/Exsist", ReplyAction="http://tempuri.org/IDatabaseService/ExsistResponse")]
        bool Exsist(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseService/Exsist", ReplyAction="http://tempuri.org/IDatabaseService/ExsistResponse")]
        System.Threading.Tasks.Task<bool> ExsistAsync(string request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseServiceChannel : Client.DatabaseHostService.IDatabaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseServiceClient : System.ServiceModel.ClientBase<Client.DatabaseHostService.IDatabaseService>, Client.DatabaseHostService.IDatabaseService {
        
        public DatabaseServiceClient() {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Connect(int ApplicationHashCode) {
            return base.Channel.Connect(ApplicationHashCode);
        }
        
        public System.Threading.Tasks.Task<int> ConnectAsync(int ApplicationHashCode) {
            return base.Channel.ConnectAsync(ApplicationHashCode);
        }
        
        public void Disconnect(int ApplicationHashCode) {
            base.Channel.Disconnect(ApplicationHashCode);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(int ApplicationHashCode) {
            return base.Channel.DisconnectAsync(ApplicationHashCode);
        }
        
        public FinanceServices.Components.Database.DatabaseTable Get(string tableName) {
            return base.Channel.Get(tableName);
        }
        
        public System.Threading.Tasks.Task<FinanceServices.Components.Database.DatabaseTable> GetAsync(string tableName) {
            return base.Channel.GetAsync(tableName);
        }
        
        public void Execute(string tableName) {
            base.Channel.Execute(tableName);
        }
        
        public System.Threading.Tasks.Task ExecuteAsync(string tableName) {
            return base.Channel.ExecuteAsync(tableName);
        }
        
        public bool Exsist(string request) {
            return base.Channel.Exsist(request);
        }
        
        public System.Threading.Tasks.Task<bool> ExsistAsync(string request) {
            return base.Channel.ExsistAsync(request);
        }
    }
}
